'14227',
'14228',
'14261',
'73160',
'73165',
'73170',
'70358')
HPI <- HPI %>%
filter(zip_code %in% ZCTA_list) %>%
filter(year > 2002)
months = expand.grid(year = unique(HPI$year), month = c("01","02","03","04","05","06","07", "08", "09", "10", "11", "12"))
months
HPI_updated <- left_join(HPI, months, by = "year")
HPI_updated
library(zoo)
sfhome <- read.csv('data/single_family_homes_time_series.csv')
sfhome <- sfhome %>%
select(region_id, date, value)
colnames(sfhome) <- c("zip_code", "date", "single_family_home_price")
rent <- read.csv('data/rental_prices.csv')
rent <- rent %>%
select(region_id, date, value)
colnames(rent) <- c("zip_code", "date", "rental_price")
sale_price <- read.csv('data/median_sale_prices.csv')
sale_price <- sale_price %>%
select(region_id, date, value)
colnames(sale_price) <- c("zip_code", "date", "median_sale_price")
base <- merge(x=sfhome, y=sale_price, by=c("zip_code", "date"), all.x=TRUE)
base2 <- merge(x=base, y=rent, by=c("zip_code", "date"), all.x=TRUE)
base2 <- separate(base2, "date", c("year", "month", "day"), sep='-')
base_real_estate <- merge(x=HPI_updated, y=base2, by=c("zip_code", "year", "month"), all.x=TRUE)
base_real_estate$date <- zoo::as.yearmon(paste(base_real_estate$year, base_real_estate$month), "%Y %m")
base_real_estate <- transform(base_real_estate, date2 = as.Date(date, frac = 1))
base_real_estate <- base_real_estate %>%
select(zip_code, date2, year, month, annual_change, HPI, HPI_1990, HPI_2000, single_family_home_price, median_sale_price, rental_price)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR("./data/shape files", "Moore_OK.shp")
library(rgdal)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR("./data/shape files", "Moore_OK.shp")
library(sf)
library(rgdal)
library(spdplyr)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR("./data/shape files", "Moore_OK.shp")
list.files(./data)
list.files('./data')
list.files('./data/shape files')
library(sf)
library(rgdal)
library(spdplyr)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR("./data/shape files", "New_Orleans.shp")
library(sf)
library(rgdal)
library(spdplyr)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR(dsn="./data/shape files", layer="Moore_OK.shp")
library(sf)
library(rgdal)
library(spdplyr)
moore_ok <- base_real_estate %>%
filter(zip_code %in% c(73160, 73165, 73170),  year %in% c(2011, 2012, 2013, 2014, 2015))
moore_ok
moore_ok_shape <- readOGR(dsn="./data/shape files", layer="Moore_OK")
moore_ok_shape <- moore_ok_shape[,-c(2,3,4,5,6,7,8,9)]
moore_ok_shape <- moore_ok_shape %>%
rename(zip_code = ZCTA5CE10)
head(moore_ok_shape)
moore_ok_shape2 <- spTransform(moore_ok_shape, CRS("+proj=longlat +datum=WGS84 +no_defs"))
moore_ok_data <- merge(moore_ok_shape2, moore_ok, by = "zip_code", duplicateGeoms = T)
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data2
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data2
writeOGR(moore_ok_data2, ".", "Moore_Tornado", driver="ESRI Shapefile")
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data2
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data2
st_write(moore_ok_data2, 'Moore_OK.shp')
library(leaflet)
moore_ok_data2 <- st_as_sf(moore_ok_data)
moore_ok_data2
st_write(moore_ok_data2, './data/shape files/Moore_Tornado.shp')
shiny::runApp('C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft')
runApp()
runApp('C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft')
runApp()
runApp('C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft')
runApp()
runApp('C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft')
runApp()
runApp('C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft')
output$line_chart_neworleans <- renderPlotly({plot_ly(refined_orleans_data, x = ~date, y =~single_fam_val, type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices')})
output$line_chart_moore <- renderPlotly({plot_ly(refined_moore_data, x = ~date, y =~single_fam_val, type = 'scatter', mode = 'lines', name = 'Moore Median Prices')})
output$line_chart_buffalo <- renderPlotly({plot_ly(refined_buffalo_data, x = ~date, y =~single_fam_val, type = 'scatter', mode = 'lines', name = 'Buffalo Median Prices')})
output$line_chart_coffeypark <- renderPlotly({plot_ly(refined_coffey_park_data, x = ~date, y =~single_fam_val, type = 'scatter', mode = 'lines', name = 'Coffey Park Median Prices')})
output$line_chart_grandisle <- renderPlotly({plot_ly(refined_orleans_data, x = ~date, y =~single_fam_val, type = 'scatter', mode = 'lines', name = 'Grand Isle Median Prices')})
library(dplyr)
library(tidyr)
library(spdplyr)
library(plotly)
library(dplyr)
library(tidyr)
library(spdplyr)
library(plotly)
setwd("/Users/tsaijeffray/Documents/GitHub/Group-E_Climate-Real-Estate/Shiny Draft")
bar_chart_data <- read.csv('bar_chart_data.csv')
setwd("C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft")
bar_chart_data <- read.csv('bar_chart_data.csv')
bar_chart_data <- read.csv('bar_chart_data.csv')
setwd("C:/Users/roryb/OneDrive/Desktop/QMSS/Spring 2022/Group-E_Climate-Real-Estate/Shiny Draft")
bar_chart_data <- read.csv('bar_chart_data.csv')
bar_chart_data <- read.csv('bar_chart_data.csv')
library(tidyr)
bar_chart_data <- read.csv('bar_chart_data.csv')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyWidgets")
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
# List of months
choices_month_neworleans <- format(seq.Date(from = as.Date("2002-08-01"), by = "month", length.out = 72), "%B-%Y")
str(choices_month_neworleans)
choices_month_neworleans[1]
choices_month_neworleans[48]
choices_month_neworleans[36]
choices_month_neworleans[38]
choices_month_neworleans[36]
choices_month_neworleans[37]
runApp()
runApp()
runApp()
runApp()
runApp()
input$choose_month_neworleans
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
### load data sources ###
single_family_homes <- read.csv("../data/single_family_homes_time_series.csv")
HPI <- read.csv("../data/HPI_data.csv")
bottom_tier <- read.csv("../data/all_homes_bottom_tier.csv")
ZCTA_list <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163', '95401', '95403', '95404',
'95405', '95407', '95409', '14201', '14202', '14203', '14204', '14206',
'14207', '14208', '14209', '14210', '14211', '14212', '14213', '14214',
'14215', '14216', '14217', '14218', '14219', '14220', '14221','14222',
'14223', '14224', '14225', '14226', '14227', '14228', '14261', '73160',
'73165', '73170', '70358')
new_orleans_zips <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163')
moore_zips <- c("73160", "73165", "73170")
coffey_zips <- c("95401", "95402", "95403", "95404", "95405", "95406", "95407", "95409")
buffalo_zips <- c('14201', '14202', '14203','14204', '14206', '14207', '14208',
'14209', '14210', '14211', '14212', '14213', '14214', '14215', '14216',
'14217', '14218', '14219', '14220', '14221','14222', '14223', '14224',
'14225', '14226', '14227', '14228', '14261')
grand_isle_zips <- c("70358")
## HPI ##
HPI <- HPI %>%
filter(zip_code %in% ZCTA_list) # refine the list so the data is smaller
months <- expand.grid(year = unique(HPI$year),
month = c("01","02","03","04","05","06",
"07", "08", "09", "10", "11", "12"))
HPI <- left_join(HPI, months, by = "year") %>%
mutate(date = as.Date(paste0(month, "/01/", year), "%m/%d/%Y")) %>%
select(zip_code, date, HPI_2000, HPI, annual_change) %>%
mutate(zip_code = as.character(zip_code),
HPI_2000 = as.numeric(HPI_2000),
HPI = as.numeric(HPI),
annual_change = as.numeric(annual_change))
# a curated list of zip codes missing from our data
missing_zips <- c('70112', '14203', '14204', '14208') %>%
as.data.frame() %>%
rename(zip_code = '.') %>%
mutate(date = NA,
single_fam_val = NA,
bottom_tier = NA,
HPI_2000 = NA,
HPI = NA,
annual_change = NA)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d") & date < as.Date('2022-01-01', "%Y-%m-%d")) %>%
rbind(missing_zips) %>%
tidyr::complete(date, zip_code) %>%
arrange(zip_code, date) %>%
filter(is.na(date) == FALSE) %>%
mutate(city = case_when(zip_code %in% c('70112', '70113', '70114', '70115', '70116', '70117',
'70118', '70119', '70121', '70122', '70123', '70124',
'70125', '70126', '70127', '70128', '70129', '70130',
'70131', '70139', '70163') ~ "New Orleans",
zip_code %in% c("73160", "73165", "73170") ~ "Moore",
zip_code %in% c("95401", "95402", "95403", "95404", "95405", "95406",
"95407", "95409") ~ "Coffey Park",
zip_code %in% c('14201', '14202', '14203','14204', '14206', '14207', '14208',
'14209', '14210', '14211', '14212', '14213', '14214', '14215',
'14216', '14217', '14218', '14219', '14220', '14221','14222',
'14223', '14224', '14225', '14226', '14227', '14228', '14261') ~ "Buffalo",
zip_code == '70358' ~ "Grand Isle"))# create months for zip codes missing from our data set
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE))
# impute the missing zip codes' numbers using the average for the city
base_data <- base_data %>%
left_join(impute_data_zip, by = c("city", "date")) %>%
mutate(single_fam_val = case_when(is.na(single_fam_val) == TRUE ~ avg_single_fam_val,
TRUE ~ as.numeric(single_fam_val)),
bottom_tier = case_when(is.na(bottom_tier) == TRUE ~ avg_bottom_tier,
TRUE ~ as.numeric(bottom_tier)),
HPI_2000 = case_when(is.na(HPI_2000) == TRUE ~ avg_HPI_2000,
TRUE ~ as.numeric(HPI_2000)),
HPI = case_when(is.na(HPI) == TRUE ~ avg_HPI,
TRUE ~ as.numeric(HPI)),
annual_change = case_when(is.na(annual_change) == TRUE ~ avg_annual_change,
TRUE ~ as.numeric(annual_change))) %>%
select(date, zip_code, single_fam_val, bottom_tier, HPI_2000, HPI, annual_change, city)
line_chart_data <- impute_data_zip
## bar chart data ##
new_orleans_diff <- base_data %>%
filter(city == "New Orleans",
date %in% c(as.Date("06/01/2005",  "%m/%d/%Y"),
as.Date("08/01/2005",  "%m/%d/%Y"),
as.Date("10/01/2005",  "%m/%d/%Y")))
moore_diff <- base_data  %>%
filter(city == "Moore",
date %in% c(as.Date("08/01/2017",  "%m/%d/%Y"),
as.Date("10/01/2017",  "%m/%d/%Y"),
as.Date("12/01/2017",  "%m/%d/%Y")))
buffalo_diff <- base_data  %>%
filter(city == "Buffalo",
date %in% c(as.Date("09/01/2014",  "%m/%d/%Y"),
as.Date("11/01/2014",  "%m/%d/%Y"),
as.Date("01/01/2015",  "%m/%d/%Y")))
grandisle_diff <- base_data  %>%
filter(city == "Grand Isle",
date %in% c(as.Date("02/01/2010",  "%m/%d/%Y"),
as.Date("04/01/2010",  "%m/%d/%Y"),
as.Date("06/01/2010",  "%m/%d/%Y")))
coffey_diff <- base_data  %>%
filter(city == "Coffey Park",
date %in% c(as.Date("08/01/2017",  "%m/%d/%Y"),
as.Date("10/01/2017",  "%m/%d/%Y"),
as.Date("12/01/2017",  "%m/%d/%Y")))
bar_chart_data <- new_orleans_diff %>%
bind_rows(coffey_diff, moore_diff, grandisle_diff, buffalo_diff)
rm(new_orleans_diff, coffey_diff, moore_diff, grandisle_diff, buffalo_diff)
neworleans_line_data <- line_chart_data %>%
filter(city == 'New Orleans')
avg_metric_neworleans = paste0('avg_', chosen_metric_neworleans)
neworleans_line_data$date2 <- format(neworleans_line_data$date, format="%Y %m")
neworleans_line_data2 <- neworleans_line_data %>%
filter(date2 > chosen_month_neworleans2)
plot_ly(neworleans_line_data2, x = ~date, y =~selected_metric,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 240, yend = 400) %>%
layout(showlegend = FALSE)
neworleans_line_data2 <- neworleans_line_data
plot_ly(neworleans_line_data2, x = ~date, y =~selected_metric,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 240, yend = 400) %>%
layout(showlegend = FALSE)
plot_ly(neworleans_line_data2, x = ~date, y =avg_single_fam_val,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 240, yend = 400) %>%
layout(showlegend = FALSE)
View(neworleans_line_data2)
plot_ly(neworleans_line_data2, x = ~date, y =~avg_single_fam_val,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 240, yend = 400) %>%
layout(showlegend = FALSE)
plot_ly(neworleans_line_data2, x = ~date, y =~avg_single_fam_val,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 0, yend = 10000000) %>%
layout(showlegend = FALSE)
plot_ly(neworleans_line_data2, x = ~date, y =~avg_single_fam_val,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 0, yend = 1000000) %>%
layout(showlegend = FALSE)
plot_ly(neworleans_line_data2, x = ~date, y =~avg_single_fam_val,
type = 'scatter', mode = 'lines', name = 'New Orleans Median Prices') %>%
add_segments(x = "08/01/2005", xend = "08/01/2005", y = 0, yend = 100000) %>%
layout(showlegend = FALSE)
str(neworleans_line_data2)
runApp()
runApp()
View(neworleans_line_data2)
View(neworleans_line_data2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(neworleans_line_data2)
runApp()
runApp()
runApp()
neworleans_line_data2 <- neworleans_line_data %>%
filter(between(date2,
as.Date("2004-08-01", format = "%Y-%m-%d"),
as.Date("2006-08-01", format = "%Y-%m-%d"))) %>%
select(date, date2, avg_metric_neworleans) %>%
rename(selected_metric = avg_metric_neworleans)
neworleans_line_data2 <- neworleans_line_data %>%
filter(between(date,
as.Date("2004-08-01", format = "%Y-%m-%d"),
as.Date("2006-08-01", format = "%Y-%m-%d"))) %>%
select(date, date2, avg_metric_neworleans) %>%
rename(selected_metric = avg_metric_neworleans)
runApp()
runApp()
runApp()
grandisle_line_data <- line_chart_data %>%
filter(city == 'Grand Isle')
avg_metric_grandisle = paste0('avg_', chosen_metric_grandisle)
grandisle_line_data$date2 <- format(grandisle_line_data$date, format="%Y %m")
grandisle_line_data2 <- grandisle_line_data %>%
filter(between(date,
as.Date("2009-04-01", format = "%Y-%m-%d"),
as.Date("2011-04-01", format = "%Y-%m-%d"))) %>%
select(date, date2, avg_metric_grandisle) %>%
rename(selected_metric = avg_metric_grandisle)
View(grandisle_line_data)
runApp()
View(impute_data_zip)
library(zoo)
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(avg_annual_change = case_when(is.na(avg_annual_change) = TRUE ~ lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1,
TRUE ~ as.numeric(avg_annual_change)))
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1,
TRUE ~ as.numeric(avg_annual_change)))
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1,
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
View(impute_data_zip)
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ as.numeric(lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1),
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
View(impute_data_zip)
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(lag_1 = lag(avg_single_fam_val),
lag_2 = lag(avg_single_fam_val,1),
avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ as.numeric(lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1),
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
View(grandisle_line_data)
View(impute_data_zip)
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(lag_1 = lag(avg_single_fam_val,0),
lag_2 = lag(avg_single_fam_val,1),
avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ as.numeric(lag(avg_single_fam_val)/lag(avg_single_fam_val,1)-1),
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(lag_1 = lag(avg_single_fam_val,0),
lag_2 = lag(avg_single_fam_val,1),
avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ as.numeric(lag(avg_single_fam_val,0)/lag(avg_single_fam_val,1)-1),
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
View(impute_data_zip)
impute_data_zip <- base_data %>%
group_by(city, date) %>%
summarize(avg_single_fam_val = mean(single_fam_val, na.rm = TRUE),
avg_bottom_tier = mean(bottom_tier, na.rm = TRUE),
avg_HPI_2000 = mean(HPI_2000, na.rm = TRUE),
avg_HPI = mean(HPI, na.rm = TRUE),
avg_annual_change = mean(annual_change, na.rm = TRUE)) %>%
ungroup() %>%
group_by(city) %>%
mutate(avg_annual_change = case_when(is.na(avg_annual_change) == TRUE ~ as.numeric(lag(avg_single_fam_val,0)/lag(avg_single_fam_val,1)-1)*100,
TRUE ~ as.numeric(avg_annual_change))) %>%
ungroup()
View(impute_data_zip)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
