data = ANES_GSS_clean,
family = cumulative(link = "probit"),
prior = prior(normal(0,100), class = "b"),
seed = 10001,
chains = 2)
post
plot(conditional_effects(post, effects = "degree_1b_ordered", categorical = FALSE))
plot(loo(post))
alt_post <- brms::brm(V202215_ordered ~ degree_1b_ordered,
data = ANES_GSS_clean,
family = cumulative(link = "probit"),
prior = prior(normal(0,100), class = "b"),
seed = 10001,
chains = 3)
plot(loo(alt_post))
post <- add_criterion(post, criterion = "loo")
alt_post <- add_criterion(alt_post, criterion = "loo")
loo_compare(post, alt_post)
posterior_draws <- posterior_predict(post)
summary(colMeans(posterior_draws))
summary(ANES_GSS_clean$degree_1b_ordered)
summary(ANES_GSS_clean$V202215_ordered)
shiny::runApp('GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft')
runApp('GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft')
runApp('GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft')
runApp('GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft')
runApp('GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft')
### load data sources ###
single_family_homes <- read.csv("../data/single_family_homes_time_series.csv")
HPI <- read.csv("../data/HPI_data.csv")
setwd("~/GitHub/DataViz/Group-E_Climate-Real-Estate/Shiny Draft")
### load data sources ###
single_family_homes <- read.csv("../data/single_family_homes_time_series.csv")
HPI <- read.csv("../data/HPI_data.csv")
bottom_tier <- read.csv("../data/all_homes_bottom_tier.csv")
ZCTA_list <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163', '95401', '95403', '95404',
'95405', '95407', '95409', '14201', '14202', '14203', '14204', '14206',
'14207', '14208', '14209', '14210', '14211', '14212', '14213', '14214',
'14215', '14216', '14217', '14218', '14219', '14220', '14221','14222',
'14223', '14224', '14225', '14226', '14227', '14228', '14261', '73160',
'73165', '73170', '70358')
new_orleans_zips <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163')
moore_zips <- c("73160", "73165", "73170")
coffey_zips <- c("95401", "95402", "95403", "95404", "95405", "95406", "95407", "95409")
buffalo_zips <- c('14201', '14202', '14203','14204', '14206', '14207', '14208',
'14209', '14210', '14211', '14212', '14213', '14214', '14215', '14216',
'14217', '14218', '14219', '14220', '14221','14222', '14223', '14224',
'14225', '14226', '14227', '14228', '14261')
grand_isle_zips <- c("70358")
## HPI ##
HPI <- HPI %>%
filter(zip_code %in% ZCTA_list) # refine the list so the data is smaller
months <- expand.grid(year = unique(HPI$year),
month = c("01","02","03","04","05","06",
"07", "08", "09", "10", "11", "12"))
HPI <- left_join(HPI, months, by = "year") %>%
mutate(date = as.Date(paste0(month, "/01/", year), "%m/%d/%y")) %>%
select(zip_code, date, HPI_2000, HPI, annual_change) %>%
mutate(zip_code = as.character(zip_code),
HPI_2000 = as.numeric(HPI_2000),
HPI = as.numeric(HPI),
annual_change = as.numeric(annual_change))
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date"))
# join all the real estate data #
base_data2 <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
left_join(HPI, by = c("zip_code", "date"))
library(leaflet)
library(RColorBrewer)
library(scales)
library(sf)
library(rgdal)
library(dplyr)
library(spdplyr)
library(htmltools)
library(shiny)
library(plotly)
library(htmlwidgets)
library(shinyjs)
set.seed(100)
### load data sources ###
single_family_homes <- read.csv("../data/single_family_homes_time_series.csv")
HPI <- read.csv("../data/HPI_data.csv")
bottom_tier <- read.csv("../data/all_homes_bottom_tier.csv")
ZCTA_list <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163', '95401', '95403', '95404',
'95405', '95407', '95409', '14201', '14202', '14203', '14204', '14206',
'14207', '14208', '14209', '14210', '14211', '14212', '14213', '14214',
'14215', '14216', '14217', '14218', '14219', '14220', '14221','14222',
'14223', '14224', '14225', '14226', '14227', '14228', '14261', '73160',
'73165', '73170', '70358')
new_orleans_zips <- c('70112', '70113', '70114', '70115', '70116', '70117', '70118', '70119',
'70121', '70122', '70123', '70124', '70125', '70126', '70127', '70128',
'70129', '70130','70131', '70139', '70163')
moore_zips <- c("73160", "73165", "73170")
coffey_zips <- c("95401", "95402", "95403", "95404", "95405", "95406", "95407", "95409")
buffalo_zips <- c('14201', '14202', '14203','14204', '14206', '14207', '14208',
'14209', '14210', '14211', '14212', '14213', '14214', '14215', '14216',
'14217', '14218', '14219', '14220', '14221','14222', '14223', '14224',
'14225', '14226', '14227', '14228', '14261')
grand_isle_zips <- c("70358")
## HPI ##
HPI <- HPI %>%
filter(zip_code %in% ZCTA_list) # refine the list so the data is smaller
months <- expand.grid(year = unique(HPI$year),
month = c("01","02","03","04","05","06",
"07", "08", "09", "10", "11", "12"))
HPI <- left_join(HPI, months, by = "year") %>%
mutate(date = as.Date(paste0(month, "/01/", year), "%m/%d/%y")) %>%
select(zip_code, date, HPI_2000, HPI, annual_change) %>%
mutate(zip_code = as.character(zip_code),
HPI_2000 = as.numeric(HPI_2000),
HPI = as.numeric(HPI),
annual_change = as.numeric(annual_change))
# join all the real estate data #
base_data2 <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
left_join(HPI, by = c("zip_code", "date"))
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date"))
runApp()
View(base_data)
View(base_data2)
# NEW ORLEANS #
new_orleans_shape <- readOGR("../data/shape files", "New_Orleans")
new_orleans_shape <- new_orleans_shape[,-c(2,3,4,5,6,7,8,9)]
refined_orleans_data <- new_orleans_shape %>%
rename(zip_code = ZCTA5CE10) %>%
spTransform(CRS("+proj=longlat +datum=WGS84 +no_defs")) %>%
merge(filter(base_data, zip_code %in% new_orleans_zips),
by = "zip_code",
duplicateGeoms = T) %>% st_as_sf()
View(refined_orleans_data)
runApp()
View(new_orleans_shape)
View(refined_orleans_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
dplyr::complete(date, zip_code)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
tidyr::complete(date, zip_code)
View(base_data)
runApp()
runApp()
runApp()
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
View(HPI)
View(HPI)
runApp()
runApp()
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
refined_orleans_data <- new_orleans_shape %>%
rename(zip_code = ZCTA5CE10) %>%
spTransform(CRS("+proj=longlat +datum=WGS84 +no_defs")) %>%
merge(filter(base_data, zip_code %in% new_orleans_zips),
by = "zip_code",
duplicateGeoms = T) %>% st_as_sf()
View(refined_orleans_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) %>%
tidyr::complete(HPI, zip_code)# create months for zip codes missing from our data set
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) %>%
tidyr::complete(HPI, nesting(date, zip_code)) # create months for zip codes missing from our data set
View(base_data)
View(base_data)
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) %>%
tidyr::complete(HPI, nesting(date, zip_code)) %>%
tidyr::complete(single_fam_val, nesting(date, zip_code)) %>%
tidyr::complete(bottom_tier, nesting(date, zip_code)) %>%# create months for zip codes missing from our data set
rm(bottom_tier, single_family_homes, months, HPI)
View(base_data2)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) %>%
tidyr::complete(HPI, nesting(date, zip_code)) %>%
tidyr::complete(single_fam_val, nesting(date, zip_code)) %>%
tidyr::complete(bottom_tier, nesting(date, zip_code))# create months for zip codes missing from our data set
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
right_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
View(single_family_homes)
View(base_data)
runApp()
# a curated list of zip codes missing from our data
missing_zips <- c('70112', '14203', '14204') %>%
as.data.frame()
View(missing_zips)
missing_zips %>% names()
# a curated list of zip codes missing from our data
missing_zips <- c('70112', '14203', '14204') %>%
as.data.frame() %>%
rename(zip_code = .)
# a curated list of zip codes missing from our data
missing_zips <- c('70112', '14203', '14204') %>%
as.data.frame() %>%
rename(zip_code = '.')
View(missing_zips)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
full_join(missing_zips, by = "zip_code") %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
runApp()
View(new_orleans_shape)
View(base_data)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
left_join(missing_zips, by = "zip_code") %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
full_join(missing_zips, by = "zip_code") %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
View(missing_zips)
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date"))
View(base_data)
names(base_data)
# a curated list of zip codes missing from our data
missing_zips <- c('70112', '14203', '14204') %>%
as.data.frame() %>%
rename(zip_code = '.') %>%
mutate(date = NA,
single_fam_val = NA,
bottom_tier = NA,
HPI_2000 = NA,
HPI = NA,
annual_change = NA)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
rbind(missing_zips) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
rbind(missing_zips)
# join all the real estate data #
base_data <- single_family_homes %>%
left_join(bottom_tier, by = c("region_id", "date")) %>%
select(region_id, date, value.x, value.y) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
mutate(date = date + 1) %>% # add a day so that it begins on the first of the month
rename("zip_code" = "region_id",
"single_fam_val" = "value.x",
"bottom_tier" = "value.y") %>%
mutate(zip_code = as.character(zip_code)) %>%
filter(zip_code %in% ZCTA_list) %>% # refine the list so the data is smaller
full_join(HPI, by = c("zip_code", "date")) %>%
filter(date > as.Date('2000-01-01', "%Y-%m-%d")) %>%
rbind(missing_zips) %>%
tidyr::complete(date, zip_code) # create months for zip codes missing from our data set
View(base_data)
runApp()
runApp()
runApp()
